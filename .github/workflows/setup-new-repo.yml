name: Setup New Repository with Rulesets

on:
  repository_dispatch:
    types: [repository_created]

jobs:
  setup:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Remove Default Labels
      - name: Remove Default Labels
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          NEW_REPO="${{ github.repository }}"
          # Fetch current labels
          gh api --paginate -X GET /repos/$NEW_REPO/labels | jq -r '.[].name' | while read label; do
            # Delete each label
            gh api -X DELETE /repos/$NEW_REPO/labels/"$label"
          done

      # Step 2: Add Labels from Template Repository
      - name: Add Labels from Template Repository
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          TEMPLATE_REPO="Vaquum/new-repository-template"
          NEW_REPO="${{ github.repository }}"
          
          # Fetch labels from the template repository
          gh api --paginate -X GET /repos/$TEMPLATE_REPO/labels | jq -c '.[]' | while read label; do
            name=$(echo $label | jq -r '.name')
            color=$(echo $label | jq -r '.color')
            description=$(echo $label | jq -r '.description // empty')
            # Add each label to the new repository
            gh api -X POST /repos/$NEW_REPO/labels \
              -f name="$name" -f color="$color" -f description="$description" || true
          done

      # Step 3: Apply Ruleset from Template Repository
      - name: Apply Ruleset to New Repository
        env:
          GH_TOKEN: ${{ secrets.NEW_REPO_SECRET }}
        run: |
          TEMPLATE_REPO="Vaquum/new-repository-template"
          NEW_REPO="${{ github.repository }}"
          
          # Fetch rulesets from the template repository
          gh api -X GET /repos/$TEMPLATE_REPO/rules > rulesets.json
          
          # Apply each ruleset to the new repository
          jq -c '.[]' rulesets.json | while read ruleset; do
            ruleset_name=$(echo $ruleset | jq -r '.name')
            ruleset_conditions=$(echo $ruleset | jq -r '.conditions')
            ruleset_rules=$(echo $ruleset | jq -r '.rules')

            # Apply the ruleset to the new repository
            gh api -X POST /repos/$NEW_REPO/rules \
              -f name="$ruleset_name" \
              -f conditions="$ruleset_conditions" \
              -f rules="$ruleset_rules"
          done
